---
import { Image } from 'astro:assets';
import { Button, Modal } from 'webcoreui/astro';
import { marked } from 'marked';
import { capitalize } from '@utils/string';

import { getCollection } from 'astro:content';

interface Props {
  id: string;
  idx: number;
}

const { id, idx } = Astro.props as Props;

const services = await getCollection('services');

const service = services.find((s) => s.slug === id);

if (!service) {
  throw new Error(`Service with id ${id} not found`);
}

const { slug, data } = service;

const { title, imageSection: image } = data;

const rawContent = service.body;

const [mainContent = '', modalContent = ''] = rawContent.split('<!--modal-->');
---

<article
  data-aos="fade-up"
  data-aos-offset="0"
  data-aos-delay="0"
  id={slug}
  data-slug={slug}
  class="flex flex-col lg:flex-row justify-center !gap-x-8 !py-1 group"
>
  <div
    class:list={[
      'basis-1/2 ',
      idx % 2 === 0 ? 'order-2 lg:order-1' : 'order-2 lg:order-2',
    ]}
  >
    <Image
      src={image}
      alt={title}
      loading="eager"
      class="object-cover h-[450px] w-auto aspect-video rounded-md shadow-2xl"
      transition:name={`img-${slug}`}
    />
  </div>
  <div
    class:list={[
      'flex flex-col justify-center basis-1/2 px-[1rem] lg:px-0',
      idx % 2 === 0 ? 'order-1 lg:order-2 lg:pl-[2rem]' : 'order-1 lg:order-1',
    ]}
  >
    <h2
      class="text-2xl lg:text-[2rem] font-[100] leading-10 group-hover:text-teal-600 transition-colors duration-500 cursor-default"
    >
      {title}
    </h2>
    <div class="prose font-[300]" set:html={marked.parse(mainContent)}>
      <!-- <Content /> -->
    </div>

    {
      Boolean(modalContent.length) && (
        <Button className={`trigger-${slug}`} theme="flat">
          Más información
        </Button>
      )
    }
  </div>
</article>

<Modal
  className={`modal-${slug} modal-service`}
  title={`Los servicios de ${capitalize(title)} incluyen:`}
>
  <div
    class="modal-content prose font-[300]"
    set:html={marked.parse(modalContent)}
  />
</Modal>
